{"version":3,"sources":["pages/menu/EditModal.jsx","pages/menu/index.jsx"],"names":["EditModal","config","ajax","modal","width","title","props","data","key","type","state","loading","iconVisible","handleSubmit","values","console","log","parentKey","ajaxMethod","put","post","ajaxUrl","onOk","setState","id","parentId","then","visible","finally","handleCancel","onCancel","this","icon","isMenu","formProps","labelWidth","surplusSpace","okText","form","submit","cancelText","resetFields","ref","onFinish","style","padding","initialValues","name","label","required","autoFocus","labelTip","min","step","Component","index","path","text","menus","record","columns","dataIndex","render","value","items","onClick","color","confirm","onConfirm","handleDeleteNode","handleAddTopMenu","del","handleSearch","get","res","map","item","orderedData","sort","a","b","aOrder","order","bOrder","menuTreeData","convertToTree","dataSource","pagination"],"mappings":"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","file":"static/js/12.5934bc07.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Form } from 'antd';\nimport { FormElement, FormRow, IconPicker, ModalContent } from 'src/library/components';\nimport config from 'src/commons/config-hoc';\n\n@config({\n    ajax: true,\n    modal: {\n        width: 700,\n        title: props => {\n            const { data = {} } = props;\n            const { key, type } = data;\n            const isMenu = type === '1';\n\n            if (isMenu) return key ? '编辑菜单' : '添加菜单';\n\n            return key ? '编辑功能' : '添加功能';\n        },\n    },\n})\nexport default class EditModal extends Component {\n    state = {\n        loading: false,\n        iconVisible: false,\n    };\n\n    handleSubmit = (values) => {\n        if (this.state.loading) return;\n\n        console.log('Received values of form: ', values);\n\n        // 如果key存在视为修改，其他为添加\n        const { key, parentKey } = values;\n        const ajaxMethod = key ? this.props.ajax.put : this.props.ajax.post;\n        const ajaxUrl = key ? `/menus/${key}` : '/menus';\n        const { onOk } = this.props;\n\n        this.setState({ loading: true });\n        ajaxMethod(ajaxUrl, { ...values, id: key, parentId: parentKey })\n            .then(() => {\n                this.setState({ visible: false });\n                onOk && onOk();\n            })\n            .finally(() => this.setState({ loading: false }));\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        if (onCancel) onCancel();\n    };\n\n    render() {\n        const { data } = this.props;\n        const { loading } = this.state;\n        const { type, icon = 'bars' } = data;\n        const isMenu = type === '1';\n\n        const formProps = {\n            labelWidth: 70,\n        };\n        return (\n            <ModalContent\n                surplusSpace={false}\n                loading={loading}\n                okText=\"保存\"\n                onOk={() => this.form.submit()}\n                cancelText=\"重置\"\n                onCancel={() => this.form.resetFields()}\n            >\n                <Form\n                    ref={form => this.form = form}\n                    onFinish={this.handleSubmit}\n                    style={{ padding: 16 }}\n                    initialValues={{ ...data, icon }}\n                >\n                    <FormElement {...formProps} type=\"hidden\" name=\"key\"/>\n                    <FormElement {...formProps} type=\"hidden\" name=\"parentKey\"/>\n                    <FormElement {...formProps} type=\"hidden\" name=\"type\"/>\n                    <FormRow>\n                        <FormElement\n                            {...formProps}\n                            label=\"名称\"\n                            name=\"text\"\n                            required\n                            autoFocus\n                        />\n                        {isMenu ? (\n                            <FormElement\n                                {...formProps}\n                                label=\"图标\"\n                                name=\"icon\"\n                            >\n                                <IconPicker/>\n                            </FormElement>\n                        ) : (\n                            <FormElement\n                                {...formProps}\n                                label=\"编码\"\n                                name=\"code\"\n                                required\n                                labelTip=\"唯一标识，硬编码，前端一般会用于控制按钮是否显示。\"\n                            />\n                        )}\n                    </FormRow>\n                    <FormRow>\n                        <FormElement\n                            {...formProps}\n                            label=\"path\"\n                            name=\"path\"\n                            labelTip=\"菜单对应的页面地址，或者功能对应的页面地址。前端会基于用户所拥有的path，对路由进行过滤。\"\n                        />\n                        {isMenu ? (\n                            <FormElement\n                                {...formProps}\n                                label=\"排序\"\n                                type=\"number\"\n                                name=\"order\"\n                                min={0}\n                                step={1}\n                            />\n                        ) : null}\n                    </FormRow>\n                    {/*{isMenu ? (*/}\n                    {/*    <FormRow>*/}\n                    {/*        <FormElement*/}\n                    {/*            {...formProps}*/}\n                    {/*            label=\"url\"*/}\n                    {/*            name=\"url\"*/}\n                    {/*        />*/}\n                    {/*        <FormElement*/}\n                    {/*            {...formProps}*/}\n                    {/*            type=\"select\"*/}\n                    {/*            label=\"target\"*/}\n                    {/*            name=\"target\"*/}\n                    {/*            options={[*/}\n                    {/*                { value: '', label: '项目内部窗口' },*/}\n                    {/*                { value: '_self', label: '替换当前窗口' },*/}\n                    {/*                { value: '_blank', label: '打开新窗口' },*/}\n                    {/*            ]}*/}\n                    {/*        />*/}\n                    {/*    </FormRow>*/}\n                    {/*) : null}*/}\n                </Form>\n            </ModalContent>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { Button } from 'antd';\nimport { Icon } from 'src/library/components';\nimport config from 'src/commons/config-hoc';\nimport PageContent from 'src/layouts/page-content';\nimport { convertToTree } from 'src/library/utils/tree-utils';\nimport { Table, ToolBar, Operator } from 'src/library/components';\nimport EditModal from './EditModal';\nimport './style.less';\n\n@config({\n    path: '/menu',\n    title: { text: '菜单&权限', icon: 'lock' },\n    ajax: true,\n})\nexport default class index extends Component {\n    state = {\n        loading: false,\n        menus: [],\n        visible: false,\n        record: {},\n        iconVisible: false,\n    };\n\n    columns = [\n        {\n            title: '名称', dataIndex: 'text', key: 'text', width: 300,\n            render: (value, record) => {\n                const { icon } = record;\n\n                if (icon) return <span><Icon type={icon}/> {value}</span>;\n\n                return value;\n            },\n        },\n        { title: 'path', dataIndex: 'path', key: 'path', width: 250 },\n        // { title: 'url', dataIndex: 'url', key: 'url' },\n        // { title: 'target', dataIndex: 'target', key: 'target', width: 60 },\n        {\n            title: '类型', dataIndex: 'type', key: 'type', width: 60,\n            render: value => {\n                if (value === '1') return '菜单';\n                if (value === '2') return '功能';\n\n                return '菜单';\n            },\n        },\n        // { title: '功能编码', dataIndex: 'code', key: 'code', width: 100 },\n        { title: '排序', dataIndex: 'order', key: 'order', width: 60 },\n        {\n            title: '操作', dataIndex: 'operator', key: 'operator', width: 150,\n            render: (value, record) => {\n                // 要有type\n                const { type = '1' } = record;\n                const items = [\n                    {\n                        label: '编辑',\n                        icon: 'form',\n                        onClick: () => this.setState({ data: { ...record, type }, visible: true }),\n                    },\n                    {\n                        label: '删除',\n                        icon: 'delete',\n                        color: 'red',\n                        confirm: {\n                            title: '您请确定要删除此节点及其子节点吗？',\n                            onConfirm: () => this.handleDeleteNode(record),\n                        },\n                    },\n                    {\n                        label: '添加子菜单',\n                        icon: 'folder-add',\n                        onClick: () => this.setState({ data: { parentKey: record.key, type: '1' }, visible: true }),\n                    },\n                    // {\n                    //     label: '添加子功能',\n                    //     icon: 'file-add',\n                    //     onClick: () => this.setState({ data: { parentKey: record.key, type: '2' }, visible: true }),\n                    // },\n                ];\n                return <Operator items={items}/>;\n            },\n        },\n    ];\n\n    componentDidMount() {\n        this.handleSearch();\n    }\n\n    handleSearch() {\n        this.setState({ loading: true });\n        this.props.ajax\n            .get('/menus')\n            .then(res => {\n                const menus = res.map(item => ({ key: item.id, parentKey: item.parentId, ...item }));\n                // 菜单根据order 排序\n                const orderedData = [ ...menus ].sort((a, b) => {\n                    const aOrder = a.order || 0;\n                    const bOrder = b.order || 0;\n\n                    // 如果order都不存在，根据 text 排序\n                    if (!aOrder && !bOrder) {\n                        return a.text > b.text ? 1 : -1;\n                    }\n\n                    return bOrder - aOrder;\n                });\n\n                const menuTreeData = convertToTree(orderedData);\n\n                this.setState({ menus: menuTreeData });\n            })\n            .finally(() => this.setState({ loading: false }));\n    }\n\n    handleAddTopMenu = () => {\n        this.setState({ data: { type: '1' }, visible: true });\n    };\n\n    handleDeleteNode = (record) => {\n        const { id } = record;\n        this.setState({ loading: true });\n        this.props.ajax\n            .del(`/menus/${id}`)\n            .then(() => {\n                this.setState({ visible: false });\n                this.handleSearch();\n            })\n            .finally(() => this.setState({ loading: false }));\n    };\n\n    render() {\n        const {\n            menus,\n            visible,\n            loading,\n            data,\n        } = this.state;\n\n        return (\n            <PageContent styleName=\"root\">\n                <ToolBar>\n                    <Button type=\"primary\" onClick={this.handleAddTopMenu}>添加顶级</Button>\n                </ToolBar>\n\n                <Table\n                    loading={loading}\n                    columns={this.columns}\n                    dataSource={menus}\n                    pagination={false}\n                />\n                <EditModal\n                    visible={visible}\n                    data={data}\n                    onOk={() => this.setState({ visible: false }, this.handleSearch)}\n                    onCancel={() => this.setState({ visible: false })}\n                />\n            </PageContent>\n        );\n    }\n}\n\n"],"sourceRoot":""}